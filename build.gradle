plugins {
  id 'maven-publish'
  id 'com.enonic.xp.app' version '3.6.2'
  id 'com.enonic.defaults' version '2.1.5'
  id "com.github.node-gradle.node" version "7.1.0"
}

app {
  name = "${appName}"
  displayName = "${appDisplayName}"
  vendorName = "${vendorName}"
  vendorUrl = "${vendorUrl}"
  systemVersion = "${xpVersion}"
}

dependencies {
  implementation "com.enonic.xp:core-api:${xpVersion}"
  implementation "com.enonic.xp:portal-api:${xpVersion}"
  include "com.enonic.xp:lib-event:${xpVersion}"
  include "com.enonic.xp:lib-auth:${xpVersion}"
  include "com.enonic.xp:lib-context:${xpVersion}"
  include "com.enonic.xp:lib-io:${xpVersion}"
  include "com.enonic.xp:lib-portal:${xpVersion}"
  include "com.enonic.xp:lib-common:${xpVersion}"
  include "com.enonic.xp:lib-cluster:${xpVersion}"
  include 'com.enonic.lib:lib-http-client:3.2.2'
  include 'com.enonic.lib:lib-text-encoding:2.1.1'
  include 'com.enonic.lib:lib-util:3.1.1'

  testImplementation "com.enonic.xp:testing:${xpVersion}"
}

repositories {
  mavenLocal()
  mavenCentral()
  xp.enonicRepo()
}

// Added node so it is easy to find a version which works
node {
  // Version of node to use.
  version = '16.14.2'

  // Version of npm to use.
  npmVersion = '8.5.0'

  // If true, it will download node using above parameters.
  // If false, it will try to use globally installed node.
  download = true
}

// Added wrapper so it is easy to see which version is used in the project
wrapper {
  gradleVersion = '6.9.1'
  distributionType = Wrapper.DistributionType.BIN
}

//──────────────────────────────────────────────────────────────────────────────
// Generate documentation
//──────────────────────────────────────────────────────────────────────────────
task generate_docs(type: Exec) {
  executable 'npm'
  args = ['run', 'generate-docs']
  mustRunAfter 'build'
}
